/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.librairy.service.learner.facade.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Result extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Result\",\"namespace\":\"org.librairy.service.learner.facade.model\",\"fields\":[{\"name\":\"date\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"thanks for using librAIry\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String date;
   private java.lang.String status;
   private java.lang.String message;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Result() {}

  /**
   * All-args constructor.
   */
  public Result(java.lang.String date, java.lang.String status, java.lang.String message) {
    this.date = date;
    this.status = status;
    this.message = message;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return date;
    case 1: return status;
    case 2: return message;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: date = (java.lang.String)value$; break;
    case 1: status = (java.lang.String)value$; break;
    case 2: message = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'date' field.
   */
  public java.lang.String getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.String value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'message' field.
   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.String value) {
    this.message = value;
  }

  /** Creates a new Result RecordBuilder */
  public static org.librairy.service.learner.facade.model.Result.Builder newBuilder() {
    return new org.librairy.service.learner.facade.model.Result.Builder();
  }
  
  /** Creates a new Result RecordBuilder by copying an existing Builder */
  public static org.librairy.service.learner.facade.model.Result.Builder newBuilder(org.librairy.service.learner.facade.model.Result.Builder other) {
    return new org.librairy.service.learner.facade.model.Result.Builder(other);
  }
  
  /** Creates a new Result RecordBuilder by copying an existing Result instance */
  public static org.librairy.service.learner.facade.model.Result.Builder newBuilder(org.librairy.service.learner.facade.model.Result other) {
    return new org.librairy.service.learner.facade.model.Result.Builder(other);
  }
  
  /**
   * RecordBuilder for Result instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Result>
    implements org.apache.avro.data.RecordBuilder<Result> {

    private java.lang.String date;
    private java.lang.String status;
    private java.lang.String message;

    /** Creates a new Builder */
    private Builder() {
      super(org.librairy.service.learner.facade.model.Result.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.librairy.service.learner.facade.model.Result.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.status)) {
        this.status = data().deepCopy(fields()[1].schema(), other.status);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Result instance */
    private Builder(org.librairy.service.learner.facade.model.Result other) {
            super(org.librairy.service.learner.facade.model.Result.SCHEMA$);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.status)) {
        this.status = data().deepCopy(fields()[1].schema(), other.status);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'date' field */
    public java.lang.String getDate() {
      return date;
    }
    
    /** Sets the value of the 'date' field */
    public org.librairy.service.learner.facade.model.Result.Builder setDate(java.lang.String value) {
      validate(fields()[0], value);
      this.date = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'date' field has been set */
    public boolean hasDate() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'date' field */
    public org.librairy.service.learner.facade.model.Result.Builder clearDate() {
      date = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'status' field */
    public java.lang.String getStatus() {
      return status;
    }
    
    /** Sets the value of the 'status' field */
    public org.librairy.service.learner.facade.model.Result.Builder setStatus(java.lang.String value) {
      validate(fields()[1], value);
      this.status = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'status' field has been set */
    public boolean hasStatus() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'status' field */
    public org.librairy.service.learner.facade.model.Result.Builder clearStatus() {
      status = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'message' field */
    public java.lang.String getMessage() {
      return message;
    }
    
    /** Sets the value of the 'message' field */
    public org.librairy.service.learner.facade.model.Result.Builder setMessage(java.lang.String value) {
      validate(fields()[2], value);
      this.message = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'message' field has been set */
    public boolean hasMessage() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'message' field */
    public org.librairy.service.learner.facade.model.Result.Builder clearMessage() {
      message = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Result build() {
      try {
        Result record = new Result();
        record.date = fieldSetFlags()[0] ? this.date : (java.lang.String) defaultValue(fields()[0]);
        record.status = fieldSetFlags()[1] ? this.status : (java.lang.String) defaultValue(fields()[1]);
        record.message = fieldSetFlags()[2] ? this.message : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
