/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.librairy.service.learner.facade.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Corpus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Corpus\",\"namespace\":\"org.librairy.service.learner.facade.model\",\"fields\":[{\"name\":\"path\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"language\",\"type\":{\"type\":\"enum\",\"name\":\"Language\",\"symbols\":[\"EN\",\"ES\",\"FR\",\"DE\"]}},{\"name\":\"separator\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\";\"},{\"name\":\"idIndex\",\"type\":\"int\",\"default\":-1},{\"name\":\"textIndex\",\"type\":\"int\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String path;
   private org.librairy.service.learner.facade.model.Language language;
   private java.lang.String separator;
   private int idIndex;
   private int textIndex;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Corpus() {}

  /**
   * All-args constructor.
   */
  public Corpus(java.lang.String path, org.librairy.service.learner.facade.model.Language language, java.lang.String separator, java.lang.Integer idIndex, java.lang.Integer textIndex) {
    this.path = path;
    this.language = language;
    this.separator = separator;
    this.idIndex = idIndex;
    this.textIndex = textIndex;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return path;
    case 1: return language;
    case 2: return separator;
    case 3: return idIndex;
    case 4: return textIndex;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: path = (java.lang.String)value$; break;
    case 1: language = (org.librairy.service.learner.facade.model.Language)value$; break;
    case 2: separator = (java.lang.String)value$; break;
    case 3: idIndex = (java.lang.Integer)value$; break;
    case 4: textIndex = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'path' field.
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * Sets the value of the 'path' field.
   * @param value the value to set.
   */
  public void setPath(java.lang.String value) {
    this.path = value;
  }

  /**
   * Gets the value of the 'language' field.
   */
  public org.librairy.service.learner.facade.model.Language getLanguage() {
    return language;
  }

  /**
   * Sets the value of the 'language' field.
   * @param value the value to set.
   */
  public void setLanguage(org.librairy.service.learner.facade.model.Language value) {
    this.language = value;
  }

  /**
   * Gets the value of the 'separator' field.
   */
  public java.lang.String getSeparator() {
    return separator;
  }

  /**
   * Sets the value of the 'separator' field.
   * @param value the value to set.
   */
  public void setSeparator(java.lang.String value) {
    this.separator = value;
  }

  /**
   * Gets the value of the 'idIndex' field.
   */
  public java.lang.Integer getIdIndex() {
    return idIndex;
  }

  /**
   * Sets the value of the 'idIndex' field.
   * @param value the value to set.
   */
  public void setIdIndex(java.lang.Integer value) {
    this.idIndex = value;
  }

  /**
   * Gets the value of the 'textIndex' field.
   */
  public java.lang.Integer getTextIndex() {
    return textIndex;
  }

  /**
   * Sets the value of the 'textIndex' field.
   * @param value the value to set.
   */
  public void setTextIndex(java.lang.Integer value) {
    this.textIndex = value;
  }

  /** Creates a new Corpus RecordBuilder */
  public static org.librairy.service.learner.facade.model.Corpus.Builder newBuilder() {
    return new org.librairy.service.learner.facade.model.Corpus.Builder();
  }
  
  /** Creates a new Corpus RecordBuilder by copying an existing Builder */
  public static org.librairy.service.learner.facade.model.Corpus.Builder newBuilder(org.librairy.service.learner.facade.model.Corpus.Builder other) {
    return new org.librairy.service.learner.facade.model.Corpus.Builder(other);
  }
  
  /** Creates a new Corpus RecordBuilder by copying an existing Corpus instance */
  public static org.librairy.service.learner.facade.model.Corpus.Builder newBuilder(org.librairy.service.learner.facade.model.Corpus other) {
    return new org.librairy.service.learner.facade.model.Corpus.Builder(other);
  }
  
  /**
   * RecordBuilder for Corpus instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Corpus>
    implements org.apache.avro.data.RecordBuilder<Corpus> {

    private java.lang.String path;
    private org.librairy.service.learner.facade.model.Language language;
    private java.lang.String separator;
    private int idIndex;
    private int textIndex;

    /** Creates a new Builder */
    private Builder() {
      super(org.librairy.service.learner.facade.model.Corpus.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.librairy.service.learner.facade.model.Corpus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.path)) {
        this.path = data().deepCopy(fields()[0].schema(), other.path);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.language)) {
        this.language = data().deepCopy(fields()[1].schema(), other.language);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.separator)) {
        this.separator = data().deepCopy(fields()[2].schema(), other.separator);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.idIndex)) {
        this.idIndex = data().deepCopy(fields()[3].schema(), other.idIndex);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.textIndex)) {
        this.textIndex = data().deepCopy(fields()[4].schema(), other.textIndex);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Corpus instance */
    private Builder(org.librairy.service.learner.facade.model.Corpus other) {
            super(org.librairy.service.learner.facade.model.Corpus.SCHEMA$);
      if (isValidValue(fields()[0], other.path)) {
        this.path = data().deepCopy(fields()[0].schema(), other.path);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.language)) {
        this.language = data().deepCopy(fields()[1].schema(), other.language);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.separator)) {
        this.separator = data().deepCopy(fields()[2].schema(), other.separator);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.idIndex)) {
        this.idIndex = data().deepCopy(fields()[3].schema(), other.idIndex);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.textIndex)) {
        this.textIndex = data().deepCopy(fields()[4].schema(), other.textIndex);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'path' field */
    public java.lang.String getPath() {
      return path;
    }
    
    /** Sets the value of the 'path' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder setPath(java.lang.String value) {
      validate(fields()[0], value);
      this.path = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'path' field has been set */
    public boolean hasPath() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'path' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder clearPath() {
      path = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'language' field */
    public org.librairy.service.learner.facade.model.Language getLanguage() {
      return language;
    }
    
    /** Sets the value of the 'language' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder setLanguage(org.librairy.service.learner.facade.model.Language value) {
      validate(fields()[1], value);
      this.language = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'language' field has been set */
    public boolean hasLanguage() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'language' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'separator' field */
    public java.lang.String getSeparator() {
      return separator;
    }
    
    /** Sets the value of the 'separator' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder setSeparator(java.lang.String value) {
      validate(fields()[2], value);
      this.separator = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'separator' field has been set */
    public boolean hasSeparator() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'separator' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder clearSeparator() {
      separator = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'idIndex' field */
    public java.lang.Integer getIdIndex() {
      return idIndex;
    }
    
    /** Sets the value of the 'idIndex' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder setIdIndex(int value) {
      validate(fields()[3], value);
      this.idIndex = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'idIndex' field has been set */
    public boolean hasIdIndex() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'idIndex' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder clearIdIndex() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'textIndex' field */
    public java.lang.Integer getTextIndex() {
      return textIndex;
    }
    
    /** Sets the value of the 'textIndex' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder setTextIndex(int value) {
      validate(fields()[4], value);
      this.textIndex = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'textIndex' field has been set */
    public boolean hasTextIndex() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'textIndex' field */
    public org.librairy.service.learner.facade.model.Corpus.Builder clearTextIndex() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Corpus build() {
      try {
        Corpus record = new Corpus();
        record.path = fieldSetFlags()[0] ? this.path : (java.lang.String) defaultValue(fields()[0]);
        record.language = fieldSetFlags()[1] ? this.language : (org.librairy.service.learner.facade.model.Language) defaultValue(fields()[1]);
        record.separator = fieldSetFlags()[2] ? this.separator : (java.lang.String) defaultValue(fields()[2]);
        record.idIndex = fieldSetFlags()[3] ? this.idIndex : (java.lang.Integer) defaultValue(fields()[3]);
        record.textIndex = fieldSetFlags()[4] ? this.textIndex : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
